name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/personal-registration:latest -f personal-registration/.docker/Dockerfile.api .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/personal-registration:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST_DIGITALOCEAN_PERSONAL_REGISTRATION }}
          username: ${{ secrets.USER_DIGITALOCEAN_PERSONAL_REGISTRATION }}
          password: ${{ secrets.PASSWORD_DIGITALOCEAN_PERSONAL_REGISTRATION }}
          script: |
            # Extract the tag on job build
              TAG=${{ needs.build.outputs.docker_tag }}
              # Create env file
              [ -e .env ] && rm .env
              touch .env
              echo "DOCKER_IMAGE_TAG=$TAG" > .env
              # Login Docker
              docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
              # Stop Containers
              CONTAINERS=$(docker ps -q)
              if [ -n "$CONTAINERS" ]; then
                docker stop $CONTAINERS
              else
                echo " No running containers"
              fi
              # Remove Old Containers
              CONTAINERS=$(docker ps -a -q)
              if [ -n "$CONTAINERS" ]; then
                docker rm $CONTAINERS
              else
                echo " No containers to remove"
              fi
              # Run a new container from a new image
              docker-compose up -d --build
